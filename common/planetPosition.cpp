
using namespace std;
/*
VSOP87 Series Version A
HELIOCENTRIC DYNAMICAL ECLIPTIC AND EQUINOX J2000
Rectangular (X,Y,Z) Coordinates in AU (Astronomical Units)

Series Validity Span: 2000 BC < Date < 6000 AD
Theoretical accuracy over span: ±1 arc sec

R*R = X*X + Y*Y + Z*Z

t = (JD - 2451545) / 365250

C++ Programming Language

Ref:
Planetary Theories in Rectangular and Spherical Variables
VSOP87 Solutions
Pierre Bretagnon, Gerard Francou
Journal of Astronomy & Astrophysics
vol. 202, p309-p315
1988
*/


#include <glm/glm.hpp>
#include <glm/gtc/matrix_transform.hpp>
#include "planetPosition.h"

#define pi 3.1415926

using namespace glm;

// - EARTH - //
// X helliocentric coordinate
float Earth_X0(float t) // 32 of 843 terms of order 0
{
	float X0 = 0;
	X0 += 0.99982928844*cos(1.75348568475 + 6283.0758499914*t);
	X0 += 0.00835257300*cos(1.71034539450 + 12566.1516999828*t);
	X0 += 0.00561144206;
	X0 += 0.00010466628*cos(1.66722645223 + 18849.2275499742*t);
	X0 += 0.00003110838*cos(0.66875185215 + 83996.84731811189*t);
	X0 += 0.00002552498*cos(0.58310207301 + 529.6909650946*t);
	X0 += 0.00002137256*cos(1.09235189672 + 1577.3435424478*t);
	X0 += 0.00001709103*cos(0.49540223397 + 6279.5527316424*t);
	X0 += 0.00001707882*cos(6.15315547484 + 6286.5989683404*t);
	X0 += 0.00001445242*cos(3.47272783760 + 2352.8661537718*t);
	X0 += 0.00001091006*cos(3.68984782465 + 5223.6939198022*t);
	X0 += 0.00000934429*cos(6.07389922585 + 12036.4607348882*t);
	X0 += 0.00000899144*cos(3.17571950523 + 10213.285546211*t);
	X0 += 0.00000566514*cos(2.15262034016 + 1059.3819301892*t);
	X0 += 0.00000684416*cos(1.30699021227 + 5753.3848848968*t);
	X0 += 0.00000734455*cos(4.35500196530 + 398.1490034082*t);
	X0 += 0.00000681437*cos(2.21821534685 + 4705.7323075436*t);
	X0 += 0.00000611238*cos(5.38479234323 + 6812.766815086*t);
	X0 += 0.00000451836*cos(6.08768280868 + 5884.9268465832*t);
	X0 += 0.00000451953*cos(1.27933728354 + 6256.7775301916*t);
	X0 += 0.00000449517*cos(5.36923831714 + 6309.3741697912*t);
	X0 += 0.00000406248*cos(0.54361367084 + 6681.2248533996*t);
	X0 += 0.00000540957*cos(0.78677364655 + 775.522611324*t);
	X0 += 0.00000547004*cos(1.46146650376 + 14143.4952424306*t);
	X0 += 0.00000520484*cos(4.43295799975 + 7860.4193924392*t);
	X0 += 0.00000214960*cos(4.50213844573 + 11506.7697697936*t);
	X0 += 0.00000227892*cos(1.23941482802 + 7058.5984613154*t);
	X0 += 0.00000225878*cos(3.27244306207 + 4694.0029547076*t);
	X0 += 0.00000255820*cos(2.26556277246 + 12168.0026965746*t);
	X0 += 0.00000256182*cos(1.45474116190 + 709.9330485583*t);
	X0 += 0.00000178120*cos(2.96205424204 + 796.2980068164*t);
	X0 += 0.00000161205*cos(1.47337718956 + 5486.777843175*t);
	return X0;
}

float Earth_X1(float t) // 16 of 491 terms of order 1
{
	float X1 = 0;
	X1 += 0.00123403056;
	X1 += 0.00051500156*cos(6.00266267204 + 12566.1516999828*t);
	X1 += 0.00001290726*cos(5.95943124583 + 18849.2275499742*t);
	X1 += 0.00001068627*cos(2.01554176551 + 6283.0758499914*t);
	X1 += 0.00000212689*cos(1.73380190491 + 6279.5527316424*t);
	X1 += 0.00000212515*cos(4.91489371033 + 6286.5989683404*t);
	X1 += 0.00000062260*cos(0.36239798178 + 4705.7323075436*t);
	X1 += 0.00000059822*cos(3.81195369871 + 6256.7775301916*t);
	X1 += 0.00000059514*cos(2.83634160150 + 6309.3741697912*t);
	X1 += 0.00000048841*cos(5.21419389335 + 775.522611324*t);
	X1 += 0.00000042883*cos(0.43789776559 + 1059.3819301892*t);
	X1 += 0.00000046286*cos(0.01839494103 + 7860.4193924392*t);
	X1 += 0.00000035675*cos(1.45279327264 + 5884.9268465832*t);
	X1 += 0.00000036061*cos(2.16002201071 + 5753.3848848968*t);
	X1 += 0.00000035367*cos(4.47243820095 + 6812.766815086*t);
	X1 += 0.00000032137*cos(5.19589851893 + 6681.2248533996*t);
	return X1*t;
}

float Earth_X2(float t) // 8 of 204 terms of order 2
{
	float X2 = 0;
	X2 -= 0.00004143217;
	X2 += 0.00002175695*cos(4.39999849572 + 12566.1516999828*t);
	X2 += 0.00000995233*cos(0.20790847155 + 6283.0758499914*t);
	X2 += 0.00000092659*cos(4.19285471010 + 18849.2275499742*t);
	X2 += 0.00000013679*cos(3.37833642063 + 6286.5989683404*t);
	X2 += 0.00000013668*cos(3.27271492019 + 6279.5527316424*t);
	X2 += 0.00000008190*cos(4.41928022030 + 6256.7775301916*t);
	X2 += 0.00000008145*cos(2.22925093408 + 6309.3741697912*t);
	return X2*t*t;
}

float Earth_X3(float t) // 4 of 18 terms of order 3
{
	float X3 = 0;
	X3 -= 0.00000175213;
	X3 += 0.00000072337*cos(2.89303952476 + 12566.1516999828*t);
	X3 += 0.00000008364*cos(3.85500954096 + 6283.0758499914*t);
	X3 += 0.00000005040*cos(2.53152989786 + 18849.2275499742*t);
	return X3*t*t*t;
}

float Earth_X4(float t) // 4 of 15 terms of order 4
{
	float X4 = 0;
	X4 += 0.00000004022;
	X4 += 0.00000001927*cos(1.18746233453 + 12566.1516999828*t);
	X4 += 0.00000000491*cos(5.29890244491 + 6283.0758499914*t);
	X4 += 0.00000000210*cos(3.74319530048 + 6438.4962494256*t);
	return X4*t*t*t*t;
}

float Earth_X5(float t) // 4 of 6 terms of order 5
{
	float X5 = 0;
	X5 += 0.00000000108;
	X5 += 0.00000000043*cos(6.08789652058 + 12566.1516999828*t);
	X5 += 0.00000000025*cos(5.33779665346 + 6438.4962494256*t);
	X5 += 0.00000000025*cos(1.31073691919 + 6127.6554505572*t);
	return X5*t*t*t*t*t;
}

// Y helliocentric coordinate
float Earth_Y0(float t) // 32 of 854 terms of order 0
{
	float Y0 = 0;
	Y0 += 0.99989211030*cos(0.18265890456 + 6283.0758499914*t);
	Y0 -= 0.02442699036;
	Y0 += 0.00835292314*cos(0.13952878991 + 12566.1516999828*t);
	Y0 += 0.00010466965*cos(0.09641690558 + 18849.2275499742*t);
	Y0 += 0.00003110838*cos(5.38114091484 + 83996.84731811189*t);
	Y0 += 0.00002570338*cos(5.30103973360 + 529.6909650946*t);
	Y0 += 0.00002147473*cos(2.66253538905 + 1577.3435424478*t);
	Y0 += 0.00001709219*cos(5.20780401071 + 6279.5527316424*t);
	Y0 += 0.00001707987*cos(4.58232858766 + 6286.5989683404*t);
	Y0 += 0.00001440265*cos(1.90068164664 + 2352.8661537718*t);
	Y0 += 0.00001135092*cos(5.27313415220 + 5223.6939198022*t);
	Y0 += 0.00000934539*cos(4.50301201844 + 12036.4607348882*t);
	Y0 += 0.00000900565*cos(1.60563288120 + 10213.285546211*t);
	Y0 += 0.00000567126*cos(0.58142248753 + 1059.3819301892*t);
	Y0 += 0.00000744932*cos(2.80728871886 + 398.1490034082*t);
	Y0 += 0.00000639316*cos(6.02923915017 + 5753.3848848968*t);
	Y0 += 0.00000681324*cos(0.64729627497 + 4705.7323075436*t);
	Y0 += 0.00000611347*cos(3.81381495286 + 6812.766815086*t);
	Y0 += 0.00000450435*cos(4.52785572489 + 5884.9268465832*t);
	Y0 += 0.00000452018*cos(5.99167242707 + 6256.7775301916*t);
	Y0 += 0.00000449968*cos(3.79880375595 + 6309.3741697912*t);
	Y0 += 0.00000551390*cos(3.96125249369 + 5507.5532386674*t);
	Y0 += 0.00000406334*cos(5.25616268027 + 6681.2248533996*t);
	Y0 += 0.00000541273*cos(5.49902805917 + 775.522611324*t);
	Y0 += 0.00000546360*cos(6.17311131785 + 14143.4952424306*t);
	Y0 += 0.00000507084*cos(2.87025193381 + 7860.4193924392*t);
	Y0 += 0.00000219504*cos(2.95216139568 + 11506.7697697936*t);
	Y0 += 0.00000227937*cos(5.95179248814 + 7058.5984613154*t);
	Y0 += 0.00000227792*cos(4.84547074733 + 4694.0029547076*t);
	Y0 += 0.00000255845*cos(0.69454231563 + 12168.0026965746*t);
	Y0 += 0.00000256132*cos(6.16722512388 + 709.9330485583*t);
	Y0 += 0.00000179242*cos(1.40003446021 + 796.2980068164*t);
	return Y0;
}

float Earth_Y1(float t) // 16 of 496 terms of order 1
{
	float Y1 = 0;
	Y1 += 0.00093046324;
	Y1 += 0.00051506609*cos(4.43180499286 + 12566.1516999828*t);
	Y1 += 0.00001290800*cos(4.38860548540 + 18849.2275499742*t);
	Y1 += 0.00000464550*cos(5.82729912952 + 6283.0758499914*t);
	Y1 += 0.00000212689*cos(0.16300556918 + 6279.5527316424*t);
	Y1 += 0.00000212533*cos(3.34400595407 + 6286.5989683404*t);
	Y1 += 0.00000062345*cos(5.07377354827 + 4705.7323075436*t);
	Y1 += 0.00000059794*cos(2.24100907272 + 6256.7775301916*t);
	Y1 += 0.00000059441*cos(1.26619990626 + 6309.3741697912*t);
	Y1 += 0.00000048987*cos(3.64166577835 + 775.522611324*t);
	Y1 += 0.00000042746*cos(5.15177425824 + 1059.3819301892*t);
	Y1 += 0.00000046642*cos(4.71575215800 + 7860.4193924392*t);
	Y1 += 0.00000037274*cos(0.66041323804 + 5753.3848848968*t);
	Y1 += 0.00000035625*cos(6.15462846966 + 5884.9268465832*t);
	Y1 += 0.00000035373*cos(2.90052012152 + 6812.766815086*t);
	Y1 += 0.00000032157*cos(3.62669702015 + 6681.2248533996*t);
	return Y1*t;
}

float Earth_Y2(float t) // 8 of 202 terms of order 2
{
	double Y2 = 0;
	Y2 += 0.00005080208;
	Y2 += 0.00002178016*cos(2.82957544235 + 12566.1516999828*t);
	Y2 += 0.00001020487*cos(4.63746718598 + 6283.0758499914*t);
	Y2 += 0.00000092688*cos(2.62218748420 + 18849.2275499742*t);
	Y2 += 0.00000013680*cos(1.80736896884 + 6286.5989683404*t);
	Y2 += 0.00000013668*cos(1.70191859339 + 6279.5527316424*t);
	Y2 += 0.00000008190*cos(2.84848380902 + 6256.7775301916*t);
	Y2 += 0.00000008145*cos(0.65845469208 + 6309.3741697912*t);
	return Y2*t*t;
}

float Earth_Y3(float t) // 4 of 17 terms of order 3
{
	float Y3 = 0;
	Y3 -= 0.00000128116;
	Y3 += 0.00000072366*cos(1.32019314413 + 12566.1516999828*t);
	Y3 += 0.00000013847*cos(5.37444701633 + 6283.0758499914*t);
	Y3 += 0.00000005044*cos(0.96001931081 + 18849.2275499742*t);
	return Y3*t*t*t;
}

float Earth_Y4(float t) // 4 of 15 terms of order 4
{
	float Y4 = 0;
	Y4 -= 0.00000004187;
	Y4 += 0.00000001931*cos(5.89883838000 + 12566.1516999828*t);
	Y4 += 0.00000000595*cos(0.51679590840 + 6283.0758499914*t);
	Y4 += 0.00000000210*cos(2.17239897368 + 6438.4962494256*t);
	return Y4*t*t*t*t;
}

float Earth_Y5(float t) // 4 of 6 terms of order 5
{
	float Y5 = 0;
	Y5 += 0.00000000072;
	Y5 += 0.00000000043*cos(4.51710019379 + 12566.1516999828*t);
	Y5 += 0.00000000025*cos(3.76700032666 + 6438.4962494256*t);
	Y5 += 0.00000000025*cos(6.02312589958 + 6127.6554505572*t);
	return Y5*t*t*t*t*t;
}

// Z helliocentric coordinate
float Earth_Z0(float t) // 32 of 178 terms of order 0
{
	float Z0 = 0;
	Z0 += 0.00000279620*cos(3.19870156017 + 84334.66158130829*t);
	Z0 += 0.00000101625*cos(5.42248110597 + 5507.5532386674*t);
	Z0 += 0.00000080461*cos(3.88027157914 + 5223.6939198022*t);
	Z0 += 0.00000043855*cos(3.70430347723 + 2352.8661537718*t);
	Z0 += 0.00000031853*cos(3.99997840986 + 1577.3435424478*t);
	Z0 += 0.00000022724*cos(3.98473831560 + 1047.7473117547*t);
	Z0 += 0.00000016395*cos(3.56456162523 + 5856.4776591154*t);
	Z0 += 0.00000018150*cos(4.98479613321 + 6283.0758499914*t);
	Z0 += 0.00000014477*cos(3.70258423465 + 9437.762934887*t);
	Z0 += 0.00000014325*cos(3.41020246931 + 10213.285546211*t);
	Z0 += 0.00000011204*cos(4.83021499098 + 14143.4952424306*t);
	Z0 += 0.00000010896*cos(2.08023708321 + 6812.766815086*t);
	Z0 += 0.00000009716*cos(3.47560205064 + 4694.0029547076*t);
	Z0 += 0.00000010363*cos(4.05663928093 + 71092.88135493269*t);
	Z0 += 0.00000008792*cos(4.44890729280 + 5753.3848848968*t);
	Z0 += 0.00000008337*cos(4.99167706048 + 7084.8967811152*t);
	Z0 += 0.00000006921*cos(4.32559054073 + 6275.9623029906*t);
	Z0 += 0.00000009145*cos(1.14182646613 + 6620.8901131878*t);
	Z0 += 0.00000007205*cos(3.62441599378 + 529.6909650946*t);
	Z0 += 0.00000007698*cos(5.55425745881 + 167621.57585086189*t);
	Z0 += 0.00000005186*cos(6.25384533126 + 18073.7049386502*t);
	Z0 += 0.00000005027*cos(2.49727910749 + 4705.7323075436*t);
	Z0 += 0.00000004529*cos(2.33827747356 + 6309.3741697912*t);
	Z0 += 0.00000004754*cos(0.71100829534 + 5884.9268465832*t);
	Z0 += 0.00000004292*cos(1.10034019036 + 6681.2248533996*t);
	Z0 += 0.00000003855*cos(1.82331477760 + 5486.777843175*t);
	Z0 += 0.00000005256*cos(4.42445744523 + 7860.4193924392*t);
	Z0 += 0.00000004025*cos(5.11990285618 + 13367.9726311066*t);
	Z0 += 0.00000004061*cos(6.02923989849 + 3930.2096962196*t);
	Z0 += 0.00000003798*cos(0.44370219832 + 3154.6870848956*t);
	Z0 += 0.00000002933*cos(5.12428135363 + 1059.3819301892*t);
	Z0 += 0.00000003424*cos(5.42065191700 + 6069.7767545534*t);
	return Z0;
}

float Earth_Z1(float t) // 16 of 120 terms of order 1
{
	double Z1 = 0;
	Z1 += 0.00227822442*cos(3.41372504278 + 6283.0758499914*t);
	Z1 += 0.00005429282;
	Z1 += 0.00001903183*cos(3.37061270964 + 12566.1516999828*t);
	Z1 += 0.00000023859*cos(3.32836261978 + 18849.2275499742*t);
	Z1 += 0.00000008671*cos(1.82289925035 + 5223.6939198022*t);
	Z1 += 0.00000007767*cos(3.88787435832 + 5507.5532386674*t);
	Z1 += 0.00000007063*cos(5.19303169379 + 2352.8661537718*t);
	Z1 += 0.00000007090*cos(2.32907317990 + 83996.84731811189*t);
	Z1 += 0.00000005362*cos(2.22429221689 + 529.6909650946*t);
	Z1 += 0.00000003894*cos(2.15568517178 + 6279.5527316424*t);
	Z1 += 0.00000003892*cos(1.53021064904 + 6286.5989683404*t);
	Z1 += 0.00000003285*cos(4.88047587852 + 10213.285546211*t);
	Z1 += 0.00000002165*cos(6.23220223547 + 7860.4193924392*t);
	Z1 += 0.00000002084*cos(5.84682067018 + 1577.3435424478*t);
	Z1 += 0.00000001959*cos(1.42270916062 + 12036.4607348882*t);
	Z1 += 0.00000001396*cos(0.50057569258 + 6309.3741697912*t);
	return Z1*t;
}

float Earth_Z2(float t) // 8 of 53 terms of order 2
{
	float Z2 = 0;
	Z2 += 0.00009721989*cos(5.15233725915 + 6283.0758499914*t);
	Z2 -= 0.00000349501;
	Z2 += 0.00000067136*cos(0.64403888586 + 12566.1516999828*t);
	Z2 += 0.00000002169*cos(1.07314429736 + 18849.2275499742*t);
	Z2 += 0.00000001662*cos(1.62746869551 + 84334.66158130829*t);
	Z2 += 0.00000000635*cos(3.51985338656 + 6279.5527316424*t);
	Z2 += 0.00000000492*cos(2.41382223971 + 1047.7473117547*t);
	Z2 += 0.00000000347*cos(6.16127984865 + 5223.6939198022*t);
	return Z2*t*t;
}

float Earth_Z3(float t) // 4 of 12 terms of order 3
{
	float Z3 = 0;
	Z3 += 0.00000276077*cos(0.59413258730 + 6283.0758499914*t);
	Z3 -= 0.00000025551;
	Z3 += 0.00000001810*cos(0.11612262117 + 12566.1516999828*t);
	Z3 += 0.00000000113*cos(5.66152847225 + 18849.2275499742*t);
	return Z3*t*t*t;
}

float Earth_Z4(float t) // 4 of 6 terms of order 4
{
	float Z4 = 0;
	Z4 += 0.00000005751*cos(2.27069090892 + 6283.0758499914*t);
	Z4 += 0.00000001305;
	Z4 += 0.00000000060*cos(4.26712050846 + 12566.1516999828*t);
	Z4 += 0.00000000006*cos(4.13914011953 + 18849.2275499742*t);
	return Z4*t*t*t*t;
}

float Earth_Z5(float t) // 2 of 2 terms of order 5
{
	float Z5 = 0;
	Z5 += 0.00000000114*cos(4.31169156923 + 6283.0758499914*t);
	Z5 += 0.00000000035;
	return Z5*t*t*t*t*t;
}

glm::vec3 EarthPos(float t)
{
	return vec3(Earth_X0(t) + Earth_X1(t) + Earth_X2(t) + Earth_X3(t) + Earth_X4(t) + Earth_X5(t),
		Earth_Z0(t) + Earth_Z1(t) + Earth_Z2(t) + Earth_Z3(t) + Earth_Z4(t) + Earth_Z5(t),
		// minus bc we use z axis instead of y
		-(Earth_Y0(t) + Earth_Y1(t) + Earth_Y2(t) + Earth_Y3(t) + Earth_Y4(t) + Earth_Y5(t)));
}

glm::vec3 MoonPos(float t)
{
	/*
	N = longitude of the ascending node
    i = inclination to the ecliptic (plane of the Earth's orbit)
    w = argument of perihelion
    a = semi-major axis, or mean distance from Sun
    e = eccentricity (0=circle, 0-1=ellipse, 1=parabola)
    M = mean anomaly (0 at perihelion; increases uniformly with time)
	w1 = N + w   = longitude of perihelion
	L  = M + w1  = mean longitude
	q  = a*(1-e) = perihelion distance
	Q  = a*(1+e) = aphelion distance
	P  = a ^ 1.5 = orbital period (years if a is in AU, astronomical units)
	T  = Epoch_of_M - (M(deg)/360_deg) / P  = time of perihelion
	v  = true anomaly (angle between position and perihelion)
	E  = eccentric anomaly
	*/
	float N = radians(125.1228 - 0.0529538083 * t); 
	float i = radians(5.1454);
	float w = radians(318.0634 + 0.1643573223 * t);
	float a = 0.25;  //(Earth - moon radii)
	float e = 0.054900;
	float M = radians(115.3654 + 13.0649929509 * t);
	float E = radians(M + e *sin(M)*(1.0 + e*cos(M)));
	float xv = a*(cos(E) - e);
	float yv = a*(sqrt(1.0 - pow(e, 2))*sin(E));
	float v = degrees(atan2(yv, xv));
	float r = sqrt(pow(xv, 2) + pow(yv, 2));
	return vec3(r*(cos(N)*cos(v + w) - sin(N)*sin(v + w)*cos(i)),
		r * (sin(v + w) * sin(i)),
		-r*(sin(N)*cos(v + w) + cos(N)*sin(v + w)*cos(i)));
	// minus bc we use z axis instead of y
}
glm::vec3 ForceCalc(float M1, vec3 Pos1, float M2, vec3 Pos2) {
	return vec3(-6.674e-11*M1*M2*(1 / (length(Pos1 - Pos2)*length(Pos1 - Pos2))))*normalize(Pos1 - Pos2);
}